{{ config(
	alias = 'snowflake__query_history',
    schema='staging',
    materialized = 'view',
    tags=["staging","snowflake"]
    ) }}

SELECT DATE (START_TIME) AS QUERY_DATE,
	QUERY_ID,
	QUERY_TEXT,
	DATABASE_NAME,
	SCHEMA_NAME,
	QUERY_TYPE,
	SESSION_ID,
	USER_NAME,
	ROLE_NAME,
	WAREHOUSE_NAME,
	WAREHOUSE_SIZE,
	WAREHOUSE_TYPE,
	CLUSTER_NUMBER,
	QUERY_TAG,
	EXECUTION_STATUS,
	ERROR_CODE,
	ERROR_MESSAGE,
	START_TIME,
	END_TIME,
	TOTAL_ELAPSED_TIME,
	BYTES_SCANNED,
	ROWS_PRODUCED,
	COMPILATION_TIME,
	EXECUTION_TIME,
	QUEUED_PROVISIONING_TIME,
	QUEUED_REPAIR_TIME,
	QUEUED_OVERLOAD_TIME,
	TRANSACTION_BLOCKED_TIME,
	OUTBOUND_DATA_TRANSFER_CLOUD,
	OUTBOUND_DATA_TRANSFER_REGION,
	OUTBOUND_DATA_TRANSFER_BYTES,
	INBOUND_DATA_TRANSFER_CLOUD,
	INBOUND_DATA_TRANSFER_REGION,
	INBOUND_DATA_TRANSFER_BYTES,
	CREDITS_USED_CLOUD_SERVICES,
	LIST_EXTERNAL_FILE_TIME,
	RELEASE_VERSION,
	EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
	EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
	EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
	EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
	EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
	IS_CLIENT_GENERATED_STATEMENT,
	CONVERT_TIMEZONE('America/Los_Angeles', 'UTC', current_timestamp) AS CREATED_TIMESTAMP,
	'{{model_id}}' AS CREATED_BY
FROM TABLE (INFORMATION_SCHEMA.QUERY_HISTORY(END_TIME_RANGE_START => dateadd({{ var('query_history_filter_key') }}, {{ var('query_history_filter_value') }}, current_timestamp()), RESULT_LIMIT => {{ var('query_history_result_limit') }} ))
